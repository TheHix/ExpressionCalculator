export const userSettings: string[] = ["Заменить", "Отфильтровать", "Отфильтровать и заменить"];

export const guideRows = [
  { regExp: "[abc]", description: "Найдите любой символ в скобках" },
  { regExp: "[^abc]", description: "Найдите любой символ, НЕ заключенный в скобки" },
  { regExp: "[0-9]", description: "Найдите любой символ в скобках (любая цифра)" },
  { regExp: "[^0-9]	", description: "Найти любой символ, НЕ заключенный в скобки (любой нецифровой)" },
  { regExp: "(x|y)", description: "Найдите любую из указанных альтернатив" },
  { regExp: ".", description: "Найти один символ, кроме символа новой строки или конца строки" },
  { regExp: "\\w", description: "Найдите символ слова" },
  { regExp: "\\W", description: "Найдите символ, не являющийся словом" },
  { regExp: "\\d", description: "Найдите цифру" },
  { regExp: "\\D", description: "Найти нецифровой символ" },
  { regExp: "\\s", description: "Найдите пробельный символ" },
  { regExp: "\\S", description: "Найдите непробельный символ" },
  { regExp: "\\0", description: "Найти символ NULL" },
  { regExp: "\\n", description: "Найти новый символ строки" },
  { regExp: "\\f", description: "Найти символ подачи формы" },
  { regExp: "\\r", description: "Найти символ возврата каретки" },
  { regExp: "\\t", description: "Найдите символ табуляции" },
  { regExp: "\\v", description: "Найдите символ вертикальной табуляции" },
  { regExp: "\\xxx", description: "Найдите символ, указанный восьмеричным числом xxx" },
  { regExp: "\\xdd", description: "Найти символ, указанный шестнадцатеричным числом dd" },
  { regExp: "\\udddd", description: "Найдите символ Unicode, указанный шестнадцатеричным числом dddd" },
  { regExp: "n+", description: "Соответствует любой строке, содержащей хотя бы один n" },
  { regExp: "n*", description: "Соответствует любой строке, содержащей ноль или более вхождений n" },
  { regExp: "n?", description: "Соответствует любой строке, которая содержит ноль или одно вхождение n" },
  { regExp: "n{X}", description: "Соответствует любой строке, содержащей последовательность X n" },
  { regExp: "n{X,Y}", description: "Соответствует любой строке, содержащей последовательность от X до Y n" },
  { regExp: "n{X,}", description: "Соответствует любой строке, содержащей последовательность не менее X n" },
  { regExp: "n$", description: "Соответствует любой строке с n в конце" },
  { regExp: "^n", description: "Соответствует любой строке с n в начале" },
  { regExp: "?=n", description: "Соответствует любой строке, за которой следует определенная строка n" },
  { regExp: "?!n", description: "Соответствует любой строке, за которой не следует определенная строка n" },
];
